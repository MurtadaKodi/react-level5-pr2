{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\n// Or from '@reduxjs/toolkit/query/react'\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { productsApi } from './productsApi';\nimport cartReducer from './cartSlice';\nexport const store = configureStore({\n  reducer: {\n    //  \"carttt\" ======>  useSelector\n    carttt: cartReducer,\n    [productsApi.reducerPath]: productsApi.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(productsApi.middleware)\n});\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","setupListeners","productsApi","cartReducer","store","reducer","carttt","reducerPath","middleware","getDefaultMiddleware","concat","dispatch"],"sources":["/Users/user/development/arch-card/react-level5/frontend/src/Redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\n// Or from '@reduxjs/toolkit/query/react'\nimport { setupListeners } from '@reduxjs/toolkit/query'\nimport { productsApi } from './productsApi'\nimport cartReducer from './cartSlice'\n\n\nexport const store = configureStore({\n  reducer: {\n    //  \"carttt\" ======>  useSelector\n    carttt: cartReducer,\n    [productsApi.reducerPath]: productsApi.reducer,\n  },\n \n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(productsApi.middleware),\n})\n\nsetupListeners(store.dispatch)"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD;AACA,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,WAAW,MAAM,aAAa;AAGrC,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAE;IACP;IACAC,MAAM,EAAEH,WAAW;IACnB,CAACD,WAAW,CAACK,WAAW,GAAGL,WAAW,CAACG;EACzC,CAAC;EAEDG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,EAAE,CAACC,MAAM,CAACR,WAAW,CAACM,UAAU;AACxD,CAAC,CAAC;AAEFP,cAAc,CAACG,KAAK,CAACO,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}